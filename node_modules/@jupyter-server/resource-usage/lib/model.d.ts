import { VDomModel } from '@jupyterlab/apputils';
import { MemoryUnit } from './format';
/**
 * A namespace for ResourcUsage statics.
 */
export declare namespace ResourceUsage {
    /**
     * A model for the resource usage items.
     */
    class Model extends VDomModel {
        /**
         * Construct a new resource usage model.
         *
         * @param options The options for creating the model.
         */
        constructor(options: Model.IOptions);
        /**
         * A promise that resolves after the next request.
         */
        refresh(): Promise<void>;
        /**
         * Whether the metrics server extension is available.
         */
        get metricsAvailable(): boolean;
        /**
         * Whether the memory metric is available.
         */
        get memoryAvailable(): boolean;
        /**
         * Whether the cpu metric is available.
         */
        get cpuAvailable(): boolean;
        /**
         * The current memory usage.
         */
        get currentMemory(): number;
        /**
         * The current memory limit, or null if not specified.
         */
        get memoryLimit(): number | null;
        /**
         * The current cpu limit, or null if not specified.
         */
        get cpuLimit(): number | null;
        /**
         * The units for memory usages and limits.
         */
        get units(): MemoryUnit;
        /**
         * The current cpu percent.
         */
        get currentCpuPercent(): number;
        /**
         * Get a list of the last metric values.
         */
        get values(): Model.IMetricValue[];
        /**
         * The warning for memory usage.
         */
        get usageWarning(): boolean;
        /**
         * Dispose of the memory usage model.
         */
        dispose(): void;
        /**
         * Given the results of the metrics request, update model values.
         *
         * @param value The metric request result.
         */
        private _updateMetricsValues;
        private _memoryAvailable;
        private _cpuAvailable;
        private _currentMemory;
        private _currentCpuPercent;
        private _memoryLimit;
        private _cpuLimit;
        private _poll;
        private _units;
        private _warn;
        private _values;
    }
    /**
     * A namespace for Model statics.
     */
    namespace Model {
        /**
         * Options for creating a ResourceUsage model.
         */
        interface IOptions {
            /**
             * The refresh rate (in ms) for querying the server.
             */
            refreshRate: number;
        }
        /**
         * An interface for metric values.
         */
        interface IMetricValue {
            /**
             * The memory percentage.
             */
            memoryPercent: number;
            /**
             * The cpu percentage.
             */
            cpuPercent: number;
        }
    }
}
