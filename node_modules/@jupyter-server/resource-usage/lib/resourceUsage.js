// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
import { VDomRenderer } from '@jupyterlab/apputils';
import { TextItem } from '@jupyterlab/statusbar';
import React from 'react';
import { ResourceUsage } from './model';
import { resourceItem } from './text';
/**
 * A VDomRenderer for showing resource usage by a kernel.
 */
export class ResourceUsageStatus extends VDomRenderer {
    /**
     * Construct a new resource usage status item.
     */
    constructor(trans) {
        super(new ResourceUsage.Model({ refreshRate: 5000 }));
        this._trans = trans;
    }
    /**
     * Render the resource usage status item.
     */
    render() {
        if (!this.model) {
            return React.createElement("div", null);
        }
        let text;
        if (this.model.memoryLimit === null) {
            text = this._trans.__('Mem: %1 %2', this.model.currentMemory.toFixed(Private.DECIMAL_PLACES), this.model.units);
        }
        else {
            text = this._trans.__('Mem: %1 / %2 %3', this.model.currentMemory.toFixed(Private.DECIMAL_PLACES), this.model.memoryLimit.toFixed(Private.DECIMAL_PLACES), this.model.units);
        }
        if (this.model.cpuAvailable) {
            text = `CPU: ${(this.model.currentCpuPercent * 100).toFixed(Private.DECIMAL_PLACES)} % ${text}`;
        }
        if (!this.model.usageWarning) {
            return (React.createElement(TextItem, { title: this._trans.__('Current resource usage'), source: text }));
        }
        else {
            return (React.createElement(TextItem, { title: this._trans.__('Current resource usage'), source: text, className: resourceItem }));
        }
    }
}
/**
 * A namespace for module private statics.
 */
var Private;
(function (Private) {
    /**
     * The number of decimal places to use when rendering memory usage.
     */
    Private.DECIMAL_PLACES = 2;
})(Private || (Private = {}));
